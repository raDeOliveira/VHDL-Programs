// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 Patches 0.01we SJ Web Edition"

// DATE "06/05/2020 13:47:03"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module beep_clock (
	estadoA,
	estadoB,
	beep);
input 	estadoA;
input 	estadoB;
output 	beep;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \estadoA~input_o ;
wire \estadoB~input_o ;
wire \beep~output_o ;


cyclonev_io_obuf \beep~output (
	.i(vcc),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\beep~output_o ),
	.obar());
// synopsys translate_off
defparam \beep~output .bus_hold = "false";
defparam \beep~output .open_drain_output = "false";
defparam \beep~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \estadoA~input (
	.i(estadoA),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\estadoA~input_o ));
// synopsys translate_off
defparam \estadoA~input .bus_hold = "false";
defparam \estadoA~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \estadoB~input (
	.i(estadoB),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\estadoB~input_o ));
// synopsys translate_off
defparam \estadoB~input .bus_hold = "false";
defparam \estadoB~input .simulate_z_as = "z";
// synopsys translate_on

assign beep = \beep~output_o ;

endmodule
