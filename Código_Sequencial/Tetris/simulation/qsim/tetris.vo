// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 Patches 0.01we SJ Web Edition"

// DATE "06/06/2020 19:36:06"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module tetris (
	branco,
	preto,
	flag);
input 	[3:0] branco;
input 	[3:0] preto;
output 	flag;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \branco[0]~input_o ;
wire \branco[1]~input_o ;
wire \branco[2]~input_o ;
wire \preto[0]~input_o ;
wire \preto[1]~input_o ;
wire \preto[2]~input_o ;
wire \flag~output_o ;
wire \branco[3]~input_o ;
wire \preto[3]~input_o ;
wire \process_0~0_combout ;


cyclonev_io_obuf \flag~output (
	.i(\process_0~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\flag~output_o ),
	.obar());
// synopsys translate_off
defparam \flag~output .bus_hold = "false";
defparam \flag~output .open_drain_output = "false";
defparam \flag~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \branco[3]~input (
	.i(branco[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\branco[3]~input_o ));
// synopsys translate_off
defparam \branco[3]~input .bus_hold = "false";
defparam \branco[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \preto[3]~input (
	.i(preto[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\preto[3]~input_o ));
// synopsys translate_off
defparam \preto[3]~input .bus_hold = "false";
defparam \preto[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \process_0~0 (
// Equation(s):
// \process_0~0_combout  = (\branco[3]~input_o  & \preto[3]~input_o )

	.dataa(!\branco[3]~input_o ),
	.datab(!\preto[3]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\process_0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \process_0~0 .extended_lut = "off";
defparam \process_0~0 .lut_mask = 64'h1111111111111111;
defparam \process_0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \branco[0]~input (
	.i(branco[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\branco[0]~input_o ));
// synopsys translate_off
defparam \branco[0]~input .bus_hold = "false";
defparam \branco[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \branco[1]~input (
	.i(branco[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\branco[1]~input_o ));
// synopsys translate_off
defparam \branco[1]~input .bus_hold = "false";
defparam \branco[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \branco[2]~input (
	.i(branco[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\branco[2]~input_o ));
// synopsys translate_off
defparam \branco[2]~input .bus_hold = "false";
defparam \branco[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \preto[0]~input (
	.i(preto[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\preto[0]~input_o ));
// synopsys translate_off
defparam \preto[0]~input .bus_hold = "false";
defparam \preto[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \preto[1]~input (
	.i(preto[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\preto[1]~input_o ));
// synopsys translate_off
defparam \preto[1]~input .bus_hold = "false";
defparam \preto[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \preto[2]~input (
	.i(preto[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\preto[2]~input_o ));
// synopsys translate_off
defparam \preto[2]~input .bus_hold = "false";
defparam \preto[2]~input .simulate_z_as = "z";
// synopsys translate_on

assign flag = \flag~output_o ;

endmodule
