// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/16/2020 20:48:41"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    recuperacao
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module recuperacao_vlg_sample_tst(
	clk,
	sequencia,
	sampler_tx
);
input  clk;
input [1:0] sequencia;
output sampler_tx;

reg sample;
time current_time;
always @(clk or sequencia)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
    if ($realtime == 0 || $realtime != current_time)  
    begin                                             
        if (sample === 1'bx)                          
            sample = 0;                               
        else                                          
            sample = ~sample;                         
    end                                               
    current_time = $realtime;                         
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module recuperacao_vlg_check_tst (
	DETETA,
	sampler_rx
);
input  DETETA;
input sampler_rx;

reg  DETETA_expected;

reg  DETETA_prev;

reg  DETETA_expected_prev;

reg  last_DETETA_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:1] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 1'b1;
end

// update real /o prevs

always @(trigger)
begin
	DETETA_prev = DETETA;
end

// update expected /o prevs

always @(trigger)
begin
	DETETA_expected_prev = DETETA_expected;
end



// expected DETETA
initial
begin
	DETETA_expected = 1'bX;
end 
// generate trigger
always @(DETETA_expected or DETETA)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected DETETA = %b | ",DETETA_expected_prev);
	$display("| real DETETA = %b | ",DETETA_prev);
`endif
	if (
		( DETETA_expected_prev !== 1'bx ) && ( DETETA_prev !== DETETA_expected_prev )
		&& ((DETETA_expected_prev !== last_DETETA_exp) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port DETETA :: @time = %t",  $realtime);
		$display ("     Expected value = %b", DETETA_expected_prev);
		$display ("     Real value = %b", DETETA_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_DETETA_exp = DETETA_expected_prev;
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module recuperacao_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [1:0] sequencia;
// wires                                               
wire DETETA;

wire sampler;                             

// assign statements (if any)                          
recuperacao i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.DETETA(DETETA),
	.sequencia(sequencia)
);

// clk
initial
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	clk = #10000 1'b0;
	clk = #30000 1'b1;
	clk = #40000 1'b0;
	clk = #20000 1'b1;
	clk = #10000 1'b0;
	clk = #10000 1'b1;
	clk = #10000 1'b0;
	clk = #20000 1'b1;
	clk = #70000 1'b0;
	clk = #10000 1'b1;
	clk = #30000 1'b0;
	clk = #10000 1'b1;
	clk = #30000 1'b0;
	clk = #20000 1'b1;
	clk = #20000 1'b0;
	clk = #10000 1'b1;
	clk = #10000 1'b0;
	clk = #10000 1'b1;
	clk = #10000 1'b0;
	clk = #80000 1'b1;
	clk = #10000 1'b0;
	clk = #30000 1'b1;
	clk = #20000 1'b0;
	clk = #10000 1'b1;
	clk = #50000 1'b0;
	clk = #10000 1'b1;
	clk = #10000 1'b0;
	clk = #10000 1'b1;
	clk = #30000 1'b0;
	clk = #10000 1'b1;
	clk = #30000 1'b0;
	clk = #30000 1'b1;
	clk = #60000 1'b0;
	clk = #10000 1'b1;
	clk = #10000 1'b0;
	clk = #10000 1'b1;
	clk = #40000 1'b0;
	clk = #10000 1'b1;
	clk = #40000 1'b0;
	clk = #30000 1'b1;
	clk = #10000 1'b0;
	clk = #20000 1'b1;
	clk = #10000 1'b0;
	clk = #10000 1'b1;
end 
// sequencia[ 1 ]
initial
begin
	sequencia[1] = 1'b1;
	sequencia[1] = #1606 1'b0;
	sequencia[1] = #6500 1'b1;
	sequencia[1] = #3500 1'b0;
	sequencia[1] = #6500 1'b1;
	sequencia[1] = #1894 1'b0;
	sequencia[1] = #1302 1'b1;
	sequencia[1] = #2300 1'b0;
	sequencia[1] = #2700 1'b1;
	sequencia[1] = #2300 1'b0;
	sequencia[1] = #5552 1'b1;
	sequencia[1] = #9000 1'b0;
	sequencia[1] = #8335 1'b1;
	# 1433;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #1900 1'b1;
		# 1433;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #412 1'b1;
	sequencia[1] = #1035 1'b0;
	sequencia[1] = #12200 1'b1;
	sequencia[1] = #9340 1'b0;
	sequencia[1] = #6200 1'b1;
	sequencia[1] = #1820 1'b0;
	sequencia[1] = #3450 1'b1;
	sequencia[1] = #1550 1'b0;
	sequencia[1] = #3450 1'b1;
	sequencia[1] = #1164 1'b0;
	sequencia[1] = #4400 1'b1;
	sequencia[1] = #5826 1'b0;
	sequencia[1] = #1700 1'b1;
	sequencia[1] = #1633 1'b0;
	sequencia[1] = #1700 1'b1;
	sequencia[1] = #1633 1'b0;
	sequencia[1] = #1700 1'b1;
	sequencia[1] = #1885 1'b0;
	sequencia[1] = #2850 1'b1;
	sequencia[1] = #2150 1'b0;
	sequencia[1] = #2850 1'b1;
	sequencia[1] = #1464 1'b0;
	sequencia[1] = #5461 1'b1;
	sequencia[1] = #7000 1'b0;
	sequencia[1] = #7539 1'b1;
	sequencia[1] = #3403 1'b0;
	sequencia[1] = #5900 1'b1;
	sequencia[1] = #3152 1'b0;
	sequencia[1] = #6500 1'b1;
	sequencia[1] = #3269 1'b0;
	sequencia[1] = #5100 1'b1;
	sequencia[1] = #4900 1'b0;
	sequencia[1] = #5100 1'b1;
	sequencia[1] = #2676 1'b0;
	sequencia[1] = #4528 1'b1;
	sequencia[1] = #4400 1'b0;
	sequencia[1] = #1072 1'b1;
	sequencia[1] = #985 1'b0;
	sequencia[1] = #5700 1'b1;
	sequencia[1] = #4300 1'b0;
	sequencia[1] = #5700 1'b1;
	sequencia[1] = #3315 1'b0;
	sequencia[1] = #1129 1'b1;
	sequencia[1] = #2350 1'b0;
	sequencia[1] = #2650 1'b1;
	sequencia[1] = #2350 1'b0;
	sequencia[1] = #1521 1'b1;
	sequencia[1] = #5462 1'b0;
	sequencia[1] = #13400 1'b1;
	sequencia[1] = #5695 1'b0;
	sequencia[1] = #4600 1'b1;
	sequencia[1] = #843 1'b0;
	sequencia[1] = #6828 1'b1;
	sequencia[1] = #6400 1'b0;
	sequencia[1] = #6772 1'b1;
	# 2698;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #3400 1'b1;
		# 3266;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #3400 1'b1;
	sequencia[1] = #3308 1'b0;
	sequencia[1] = #5400 1'b1;
	sequencia[1] = #4600 1'b0;
	sequencia[1] = #5400 1'b1;
	sequencia[1] = #1862 1'b0;
	sequencia[1] = #254 1'b1;
	sequencia[1] = #6600 1'b0;
	sequencia[1] = #13146 1'b1;
	sequencia[1] = #7988 1'b0;
	sequencia[1] = #8800 1'b1;
	sequencia[1] = #6660 1'b0;
	sequencia[1] = #4500 1'b1;
	sequencia[1] = #5500 1'b0;
	sequencia[1] = #4500 1'b1;
	sequencia[1] = #2052 1'b0;
	sequencia[1] = #963 1'b1;
	sequencia[1] = #2600 1'b0;
	sequencia[1] = #2400 1'b1;
	sequencia[1] = #2600 1'b0;
	sequencia[1] = #1437 1'b1;
	# 2003;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #3733 1'b1;
		# 2933;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #3733 1'b1;
	sequencia[1] = #932 1'b0;
	sequencia[1] = #307 1'b1;
	sequencia[1] = #2800 1'b0;
	sequencia[1] = #2200 1'b1;
	sequencia[1] = #2800 1'b0;
	sequencia[1] = #4829 1'b1;
	sequencia[1] = #3300 1'b0;
	sequencia[1] = #4500 1'b1;
	# 1233;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #2100 1'b1;
		# 1233;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #4810 1'b1;
	sequencia[1] = #5000 1'b0;
	sequencia[1] = #5000 1'b1;
	sequencia[1] = #5000 1'b0;
	sequencia[1] = #2824 1'b1;
	sequencia[1] = #3700 1'b0;
	sequencia[1] = #6300 1'b1;
	sequencia[1] = #3700 1'b0;
	sequencia[1] = #5341 1'b1;
	# 2999;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #3667 1'b1;
		# 2999;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #6155 1'b1;
	sequencia[1] = #5600 1'b0;
	sequencia[1] = #1604 1'b1;
	# 1510;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #3467 1'b1;
		# 3199;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #3467 1'b1;
	sequencia[1] = #1691 1'b0;
	sequencia[1] = #650 1'b1;
	sequencia[1] = #1950 1'b0;
	sequencia[1] = #3050 1'b1;
	sequencia[1] = #1950 1'b0;
	sequencia[1] = #2400 1'b1;
	# 3397;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #2734 1'b1;
		# 3932;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #2734 1'b1;
	sequencia[1] = #537 1'b0;
	sequencia[1] = #1385 1'b1;
	sequencia[1] = #1900 1'b0;
	sequencia[1] = #3100 1'b1;
	sequencia[1] = #1900 1'b0;
	sequencia[1] = #1715 1'b1;
	# 2502;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #3200 1'b1;
		# 3466;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #3200 1'b1;
	sequencia[1] = #2726 1'b0;
	sequencia[1] = #5600 1'b1;
	sequencia[1] = #12253 1'b0;
	sequencia[1] = #10200 1'b1;
	sequencia[1] = #2970 1'b0;
	sequencia[1] = #3134 1'b1;
	sequencia[1] = #3532 1'b0;
	sequencia[1] = #3134 1'b1;
	sequencia[1] = #3532 1'b0;
	sequencia[1] = #3134 1'b1;
	sequencia[1] = #1909 1'b0;
	sequencia[1] = #2000 1'b1;
	sequencia[1] = #3000 1'b0;
	sequencia[1] = #2000 1'b1;
	sequencia[1] = #1842 1'b0;
	sequencia[1] = #413 1'b1;
	# 1966;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #1367 1'b1;
		# 1966;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #2531 1'b1;
	# 2066;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #4600 1'b1;
		# 2066;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #3026 1'b1;
	sequencia[1] = #2295 1'b0;
	sequencia[1] = #2100 1'b1;
	sequencia[1] = #2900 1'b0;
	sequencia[1] = #2100 1'b1;
	sequencia[1] = #7549 1'b0;
	sequencia[1] = #12600 1'b1;
	sequencia[1] = #456 1'b0;
	sequencia[1] = #1069 1'b1;
	# 2133;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #4533 1'b1;
		# 2133;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #6923 1'b1;
	sequencia[1] = #7400 1'b0;
	sequencia[1] = #9143 1'b1;
	sequencia[1] = #2290 1'b0;
	sequencia[1] = #11600 1'b1;
	sequencia[1] = #6506 1'b0;
	sequencia[1] = #2600 1'b1;
	sequencia[1] = #2400 1'b0;
	sequencia[1] = #2600 1'b1;
	sequencia[1] = #2323 1'b0;
	sequencia[1] = #4533 1'b1;
	sequencia[1] = #2133 1'b0;
	sequencia[1] = #4533 1'b1;
	sequencia[1] = #2133 1'b0;
	sequencia[1] = #4533 1'b1;
	sequencia[1] = #2966 1'b0;
	sequencia[1] = #2034 1'b1;
	sequencia[1] = #1299 1'b0;
	sequencia[1] = #2034 1'b1;
	sequencia[1] = #1299 1'b0;
	sequencia[1] = #2034 1'b1;
	sequencia[1] = #272 1'b0;
	sequencia[1] = #4400 1'b1;
	sequencia[1] = #9345 1'b0;
	sequencia[1] = #9200 1'b1;
	sequencia[1] = #6933 1'b0;
	sequencia[1] = #1350 1'b1;
	sequencia[1] = #4400 1'b0;
	sequencia[1] = #5600 1'b1;
	sequencia[1] = #4400 1'b0;
	sequencia[1] = #5205 1'b1;
	sequencia[1] = #3700 1'b0;
	sequencia[1] = #6300 1'b1;
	sequencia[1] = #3700 1'b0;
	sequencia[1] = #6078 1'b1;
	# 1766;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #1567 1'b1;
		# 1766;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #835 1'b1;
	# 56;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #4267 1'b1;
		# 2399;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #4267 1'b1;
	sequencia[1] = #2726 1'b0;
	sequencia[1] = #2950 1'b1;
	sequencia[1] = #2050 1'b0;
	sequencia[1] = #2950 1'b1;
	sequencia[1] = #1669 1'b0;
	sequencia[1] = #2209 1'b1;
	# 3133;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #3533 1'b1;
		# 3133;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #5923 1'b1;
	sequencia[1] = #4400 1'b0;
	sequencia[1] = #3740 1'b1;
	sequencia[1] = #1750 1'b0;
	sequencia[1] = #3250 1'b1;
	sequencia[1] = #1750 1'b0;
	sequencia[1] = #513 1'b1;
	# 868;
	repeat(2)
	begin
		sequencia[1] = 1'b0;
		sequencia[1] = #1800 1'b1;
		# 1533;
	end
	sequencia[1] = 1'b0;
	sequencia[1] = #1800 1'b1;
	sequencia[1] = #1252 1'b0;
	sequencia[1] = #2900 1'b1;
	sequencia[1] = #2100 1'b0;
	sequencia[1] = #2900 1'b1;
	sequencia[1] = #1514 1'b0;
	sequencia[1] = #4854 1'b1;
	sequencia[1] = #4100 1'b0;
	sequencia[1] = #1046 1'b1;
	sequencia[1] = #1767 1'b0;
	sequencia[1] = #3200 1'b1;
	sequencia[1] = #1800 1'b0;
	sequencia[1] = #3200 1'b1;
end 
// sequencia[ 0 ]
initial
begin
	sequencia[0] = 1'b0;
	sequencia[0] = #212 1'b1;
	# 2399;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #4267 1'b1;
		# 2399;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #4057 1'b1;
	sequencia[0] = #356 1'b0;
	sequencia[0] = #4300 1'b1;
	sequencia[0] = #5910 1'b0;
	sequencia[0] = #1834 1'b1;
	sequencia[0] = #1499 1'b0;
	sequencia[0] = #1834 1'b1;
	sequencia[0] = #1499 1'b0;
	sequencia[0] = #1834 1'b1;
	sequencia[0] = #2350 1'b0;
	sequencia[0] = #1600 1'b1;
	sequencia[0] = #1733 1'b0;
	sequencia[0] = #1600 1'b1;
	sequencia[0] = #1733 1'b0;
	sequencia[0] = #1600 1'b1;
	sequencia[0] = #318 1'b0;
	sequencia[0] = #1400 1'b1;
	sequencia[0] = #4700 1'b0;
	sequencia[0] = #3900 1'b1;
	# 688;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #2200 1'b1;
		# 1133;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #2200 1'b1;
	sequencia[0] = #446 1'b0;
	sequencia[0] = #2932 1'b1;
	sequencia[0] = #3700 1'b0;
	sequencia[0] = #4524 1'b1;
	sequencia[0] = #2400 1'b0;
	sequencia[0] = #2600 1'b1;
	sequencia[0] = #2400 1'b0;
	sequencia[0] = #3258 1'b1;
	# 1366;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #1967 1'b1;
		# 1366;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #2052 1'b1;
	sequencia[0] = #4800 1'b0;
	sequencia[0] = #5200 1'b1;
	sequencia[0] = #4800 1'b0;
	sequencia[0] = #7423 1'b1;
	# 2333;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #4333 1'b1;
		# 2333;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #214 1'b1;
	sequencia[0] = #292 1'b0;
	sequencia[0] = #5300 1'b1;
	sequencia[0] = #4700 1'b0;
	sequencia[0] = #5300 1'b1;
	sequencia[0] = #4408 1'b0;
	sequencia[0] = #5235 1'b1;
	sequencia[0] = #4300 1'b0;
	sequencia[0] = #5700 1'b1;
	sequencia[0] = #4300 1'b0;
	sequencia[0] = #465 1'b1;
	sequencia[0] = #3928 1'b0;
	sequencia[0] = #5200 1'b1;
	sequencia[0] = #1915 1'b0;
	sequencia[0] = #12600 1'b1;
	sequencia[0] = #6357 1'b0;
	sequencia[0] = #479 1'b1;
	sequencia[0] = #3200 1'b0;
	sequencia[0] = #6800 1'b1;
	sequencia[0] = #3200 1'b0;
	sequencia[0] = #7508 1'b1;
	sequencia[0] = #4800 1'b0;
	sequencia[0] = #9445 1'b1;
	sequencia[0] = #3600 1'b0;
	sequencia[0] = #6400 1'b1;
	sequencia[0] = #3600 1'b0;
	sequencia[0] = #1856 1'b1;
	sequencia[0] = #2400 1'b0;
	sequencia[0] = #2600 1'b1;
	sequencia[0] = #2400 1'b0;
	sequencia[0] = #1712 1'b1;
	sequencia[0] = #3685 1'b0;
	sequencia[0] = #5100 1'b1;
	sequencia[0] = #1215 1'b0;
	sequencia[0] = #5204 1'b1;
	sequencia[0] = #4600 1'b0;
	sequencia[0] = #500 1'b1;
	sequencia[0] = #5900 1'b0;
	sequencia[0] = #3796 1'b1;
	sequencia[0] = #1010 1'b0;
	sequencia[0] = #6900 1'b1;
	sequencia[0] = #2090 1'b0;
	sequencia[0] = #2184 1'b1;
	# 2933;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #3733 1'b1;
		# 2933;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #2360 1'b1;
	# 1899;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #1434 1'b1;
		# 1899;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #626 1'b1;
	sequencia[0] = #1716 1'b0;
	sequencia[0] = #5900 1'b1;
	sequencia[0] = #5606 1'b0;
	sequencia[0] = #3067 1'b1;
	sequencia[0] = #3599 1'b0;
	sequencia[0] = #3067 1'b1;
	sequencia[0] = #3599 1'b0;
	sequencia[0] = #3067 1'b1;
	sequencia[0] = #2033 1'b0;
	sequencia[0] = #6000 1'b1;
	sequencia[0] = #2346 1'b0;
	sequencia[0] = #357 1'b1;
	# 1266;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #2067 1'b1;
		# 1266;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #1711 1'b1;
	sequencia[0] = #339 1'b0;
	sequencia[0] = #5500 1'b1;
	sequencia[0] = #4526 1'b0;
	sequencia[0] = #6700 1'b1;
	sequencia[0] = #3300 1'b0;
	sequencia[0] = #6700 1'b1;
	sequencia[0] = #2935 1'b0;
	sequencia[0] = #1679 1'b1;
	# 1099;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #2234 1'b1;
		# 1099;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #1606 1'b1;
	# 1733;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #1600 1'b1;
		# 1733;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #1559 1'b1;
	# 1699;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #1634 1'b1;
		# 1699;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #627 1'b1;
	sequencia[0] = #2272 1'b0;
	sequencia[0] = #6900 1'b1;
	sequencia[0] = #828 1'b0;
	sequencia[0] = #1143 1'b1;
	sequencia[0] = #2250 1'b0;
	sequencia[0] = #2750 1'b1;
	sequencia[0] = #2250 1'b0;
	sequencia[0] = #4977 1'b1;
	sequencia[0] = #4100 1'b0;
	sequencia[0] = #5900 1'b1;
	sequencia[0] = #4100 1'b0;
	sequencia[0] = #7048 1'b1;
	sequencia[0] = #8800 1'b0;
	sequencia[0] = #9307 1'b1;
	sequencia[0] = #4700 1'b0;
	sequencia[0] = #2711 1'b1;
	# 1233;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #2100 1'b1;
		# 1233;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #3847 1'b1;
	sequencia[0] = #5500 1'b0;
	sequencia[0] = #4500 1'b1;
	sequencia[0] = #5500 1'b0;
	sequencia[0] = #2718 1'b1;
	sequencia[0] = #2988 1'b0;
	sequencia[0] = #6600 1'b1;
	sequencia[0] = #4657 1'b0;
	sequencia[0] = #13800 1'b1;
	sequencia[0] = #1955 1'b0;
	sequencia[0] = #2425 1'b1;
	# 2599;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #4067 1'b1;
		# 2599;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #4366 1'b1;
	sequencia[0] = #3200 1'b0;
	sequencia[0] = #6800 1'b1;
	sequencia[0] = #3200 1'b0;
	sequencia[0] = #4078 1'b1;
	sequencia[0] = #4588 1'b0;
	sequencia[0] = #5200 1'b1;
	sequencia[0] = #4800 1'b0;
	sequencia[0] = #5200 1'b1;
	sequencia[0] = #2557 1'b0;
	sequencia[0] = #6800 1'b1;
	sequencia[0] = #855 1'b0;
	sequencia[0] = #1024 1'b1;
	# 1099;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #2234 1'b1;
		# 1099;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #4653 1'b1;
	sequencia[0] = #5500 1'b0;
	sequencia[0] = #2726 1'b1;
	# 3266;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #3400 1'b1;
		# 3266;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #1734 1'b1;
	sequencia[0] = #4554 1'b0;
	sequencia[0] = #10600 1'b1;
	sequencia[0] = #6130 1'b0;
	sequencia[0] = #5200 1'b1;
	sequencia[0] = #3516 1'b0;
	sequencia[0] = #388 1'b1;
	sequencia[0] = #5700 1'b0;
	sequencia[0] = #5769 1'b1;
	sequencia[0] = #5900 1'b0;
	sequencia[0] = #5905 1'b1;
	# 2199;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #4467 1'b1;
		# 2199;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #807 1'b1;
	sequencia[0] = #4364 1'b0;
	sequencia[0] = #10800 1'b1;
	sequencia[0] = #5317 1'b0;
	sequencia[0] = #2250 1'b1;
	sequencia[0] = #2750 1'b0;
	sequencia[0] = #2250 1'b1;
	sequencia[0] = #8989 1'b0;
	sequencia[0] = #11400 1'b1;
	sequencia[0] = #5503 1'b0;
	sequencia[0] = #6100 1'b1;
	sequencia[0] = #3900 1'b0;
	sequencia[0] = #6100 1'b1;
	sequencia[0] = #1303 1'b0;
	sequencia[0] = #1667 1'b1;
	sequencia[0] = #1666 1'b0;
	sequencia[0] = #1667 1'b1;
	sequencia[0] = #1666 1'b0;
	sequencia[0] = #1667 1'b1;
	sequencia[0] = #641 1'b0;
	sequencia[0] = #4125 1'b1;
	sequencia[0] = #3500 1'b0;
	sequencia[0] = #6500 1'b1;
	sequencia[0] = #3500 1'b0;
	sequencia[0] = #2375 1'b1;
	# 29;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #4533 1'b1;
		# 2133;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #4533 1'b1;
	sequencia[0] = #2106 1'b0;
	sequencia[0] = #3286 1'b1;
	sequencia[0] = #7200 1'b0;
	sequencia[0] = #15001 1'b1;
	sequencia[0] = #4000 1'b0;
	sequencia[0] = #6000 1'b1;
	sequencia[0] = #4000 1'b0;
	sequencia[0] = #1325 1'b1;
	sequencia[0] = #1550 1'b0;
	sequencia[0] = #3450 1'b1;
	sequencia[0] = #1550 1'b0;
	sequencia[0] = #6583 1'b1;
	sequencia[0] = #3400 1'b0;
	sequencia[0] = #4044 1'b1;
	sequencia[0] = #3800 1'b0;
	sequencia[0] = #6922 1'b1;
	sequencia[0] = #3500 1'b0;
	sequencia[0] = #4389 1'b1;
	# 2372;
	repeat(2)
	begin
		sequencia[0] = 1'b0;
		sequencia[0] = #3800 1'b1;
		# 2866;
	end
	sequencia[0] = 1'b0;
	sequencia[0] = #3800 1'b1;
	sequencia[0] = #2129 1'b0;
	sequencia[0] = #2550 1'b1;
	sequencia[0] = #2450 1'b0;
	sequencia[0] = #2550 1'b1;
	sequencia[0] = #1896 1'b0;
	sequencia[0] = #2800 1'b1;
	sequencia[0] = #2200 1'b0;
	sequencia[0] = #2800 1'b1;
end 

recuperacao_vlg_sample_tst tb_sample (
	.clk(clk),
	.sequencia(sequencia),
	.sampler_tx(sampler)
);

recuperacao_vlg_check_tst tb_out(
	.DETETA(DETETA),
	.sampler_rx(sampler)
);
endmodule

