// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 15.0.0 Build 145 04/22/2015 Patches 0.01we SJ Web Edition"

// DATE "06/16/2020 22:34:23"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module recuperacao (
	clk,
	sequencia1,
	sequencia,
	DETETA);
input 	clk;
input 	[1:0] sequencia1;
input 	[2:0] sequencia;
output 	DETETA;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \DETETA~output_o ;
wire \sequencia[0]~input_o ;
wire \sequencia[2]~input_o ;
wire \sequencia[1]~input_o ;
wire \sequencia1[0]~input_o ;
wire \sequencia1[1]~input_o ;
wire \clk~input_o ;
wire \Selector1~0_combout ;
wire \process_1~0_combout ;
wire \present_state.tres~q ;
wire \Selector0~1_combout ;
wire \Selector0~0_combout ;
wire \present_state.um~q ;
wire \Selector1~1_combout ;
wire \present_state.dois~q ;
wire \Selector4~0_combout ;
wire \Selector4~1_combout ;


cyclonev_io_obuf \DETETA~output (
	.i(\Selector4~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DETETA~output_o ),
	.obar());
// synopsys translate_off
defparam \DETETA~output .bus_hold = "false";
defparam \DETETA~output .open_drain_output = "false";
defparam \DETETA~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \sequencia[0]~input (
	.i(sequencia[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sequencia[0]~input_o ));
// synopsys translate_off
defparam \sequencia[0]~input .bus_hold = "false";
defparam \sequencia[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sequencia[2]~input (
	.i(sequencia[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sequencia[2]~input_o ));
// synopsys translate_off
defparam \sequencia[2]~input .bus_hold = "false";
defparam \sequencia[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sequencia[1]~input (
	.i(sequencia[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sequencia[1]~input_o ));
// synopsys translate_off
defparam \sequencia[1]~input .bus_hold = "false";
defparam \sequencia[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sequencia1[0]~input (
	.i(sequencia1[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sequencia1[0]~input_o ));
// synopsys translate_off
defparam \sequencia1[0]~input .bus_hold = "false";
defparam \sequencia1[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \sequencia1[1]~input (
	.i(sequencia1[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\sequencia1[1]~input_o ));
// synopsys translate_off
defparam \sequencia1[1]~input .bus_hold = "false";
defparam \sequencia1[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (!\sequencia[1]~input_o  & (!\sequencia1[0]~input_o  & !\sequencia1[1]~input_o ))

	.dataa(!\sequencia[1]~input_o ),
	.datab(!\sequencia1[0]~input_o ),
	.datac(!\sequencia1[1]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector1~0 .extended_lut = "off";
defparam \Selector1~0 .lut_mask = 64'h8080808080808080;
defparam \Selector1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \process_1~0 (
// Equation(s):
// \process_1~0_combout  = ( \sequencia1[1]~input_o  ) # ( !\sequencia1[1]~input_o  & ( ((!\sequencia[1]~input_o ) # ((\sequencia1[0]~input_o ) # (\sequencia[2]~input_o ))) # (\sequencia[0]~input_o ) ) )

	.dataa(!\sequencia[0]~input_o ),
	.datab(!\sequencia[1]~input_o ),
	.datac(!\sequencia[2]~input_o ),
	.datad(!\sequencia1[0]~input_o ),
	.datae(!\sequencia1[1]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\process_1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \process_1~0 .extended_lut = "off";
defparam \process_1~0 .lut_mask = 64'hDFFFFFFFDFFFFFFF;
defparam \process_1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \present_state.tres (
	.clk(\clk~input_o ),
	.d(\Selector4~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.tres~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.tres .is_wysiwyg = "true";
defparam \present_state.tres .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector0~1 (
// Equation(s):
// \Selector0~1_combout  = ( \sequencia[0]~input_o  & ( (!\sequencia1[1]~input_o  & (!\sequencia1[0]~input_o  & (!\sequencia[2]~input_o  & !\sequencia[1]~input_o ))) ) ) # ( !\sequencia[0]~input_o  & ( (!\sequencia1[1]~input_o  & (!\sequencia1[0]~input_o  & 
// (!\sequencia[2]~input_o  $ (!\sequencia[1]~input_o )))) ) )

	.dataa(!\sequencia1[1]~input_o ),
	.datab(!\sequencia1[0]~input_o ),
	.datac(!\sequencia[2]~input_o ),
	.datad(!\sequencia[1]~input_o ),
	.datae(!\sequencia[0]~input_o ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector0~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector0~1 .extended_lut = "off";
defparam \Selector0~1 .lut_mask = 64'h0880800008808000;
defparam \Selector0~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = ( \sequencia[2]~input_o  & ( \Selector0~1_combout  & ( (!\present_state.tres~q  & (((!\present_state.dois~q  & \sequencia[0]~input_o )) # (\present_state.um~q ))) # (\present_state.tres~q  & ((!\present_state.dois~q ) # 
// ((!\sequencia[0]~input_o )))) ) ) ) # ( !\sequencia[2]~input_o  & ( \Selector0~1_combout  & ( (!\present_state.um~q  & (!\present_state.dois~q  $ (((!\sequencia[0]~input_o ))))) # (\present_state.um~q  & ((!\present_state.tres~q ) # 
// ((\present_state.dois~q  & !\sequencia[0]~input_o )))) ) ) ) # ( \sequencia[2]~input_o  & ( !\Selector0~1_combout  & ( (!\present_state.tres~q  & \present_state.um~q ) ) ) ) # ( !\sequencia[2]~input_o  & ( !\Selector0~1_combout  & ( 
// (!\present_state.tres~q  & \present_state.um~q ) ) ) )

	.dataa(!\present_state.dois~q ),
	.datab(!\present_state.tres~q ),
	.datac(!\present_state.um~q ),
	.datad(!\sequencia[0]~input_o ),
	.datae(!\sequencia[2]~input_o ),
	.dataf(!\Selector0~1_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector0~0 .extended_lut = "off";
defparam \Selector0~0 .lut_mask = 64'h0C0C0C0C5DAC3FAE;
defparam \Selector0~0 .shared_arith = "off";
// synopsys translate_on

dffeas \present_state.um (
	.clk(\clk~input_o ),
	.d(\Selector0~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.um~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.um .is_wysiwyg = "true";
defparam \present_state.um .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector1~1 (
// Equation(s):
// \Selector1~1_combout  = ( !\present_state.dois~q  & ( (\sequencia[0]~input_o  & (\Selector1~0_combout  & (!\sequencia[2]~input_o  & (!\present_state.um~q  & !\present_state.tres~q )))) ) ) # ( \present_state.dois~q  & ( (((\process_1~0_combout  & 
// ((!\present_state.tres~q ))))) ) )

	.dataa(!\sequencia[0]~input_o ),
	.datab(!\Selector1~0_combout ),
	.datac(!\process_1~0_combout ),
	.datad(!\present_state.um~q ),
	.datae(!\present_state.dois~q ),
	.dataf(!\present_state.tres~q ),
	.datag(!\sequencia[2]~input_o ),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector1~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector1~1 .extended_lut = "on";
defparam \Selector1~1 .lut_mask = 64'h10000F0F00000000;
defparam \Selector1~1 .shared_arith = "off";
// synopsys translate_on

dffeas \present_state.dois (
	.clk(\clk~input_o ),
	.d(\Selector1~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.dois~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.dois .is_wysiwyg = "true";
defparam \present_state.dois .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector4~0 (
// Equation(s):
// \Selector4~0_combout  = ( !\sequencia1[1]~input_o  & ( \present_state.dois~q  & ( (!\sequencia[0]~input_o  & (\sequencia[1]~input_o  & (!\sequencia[2]~input_o  & !\sequencia1[0]~input_o ))) ) ) )

	.dataa(!\sequencia[0]~input_o ),
	.datab(!\sequencia[1]~input_o ),
	.datac(!\sequencia[2]~input_o ),
	.datad(!\sequencia1[0]~input_o ),
	.datae(!\sequencia1[1]~input_o ),
	.dataf(!\present_state.dois~q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector4~0 .extended_lut = "off";
defparam \Selector4~0 .lut_mask = 64'h0000000020000000;
defparam \Selector4~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Selector4~1 (
// Equation(s):
// \Selector4~1_combout  = ( \present_state.um~q  & ( \Selector1~0_combout  & ( ((!\sequencia[0]~input_o  & (\sequencia[2]~input_o  & \present_state.tres~q ))) # (\Selector4~0_combout ) ) ) ) # ( !\present_state.um~q  & ( \Selector1~0_combout  & ( 
// ((!\sequencia[0]~input_o  & (\sequencia[2]~input_o  & \present_state.tres~q )) # (\sequencia[0]~input_o  & (!\sequencia[2]~input_o ))) # (\Selector4~0_combout ) ) ) ) # ( \present_state.um~q  & ( !\Selector1~0_combout  & ( \Selector4~0_combout  ) ) ) # ( 
// !\present_state.um~q  & ( !\Selector1~0_combout  & ( \Selector4~0_combout  ) ) )

	.dataa(!\sequencia[0]~input_o ),
	.datab(!\sequencia[2]~input_o ),
	.datac(!\Selector4~0_combout ),
	.datad(!\present_state.tres~q ),
	.datae(!\present_state.um~q ),
	.dataf(!\Selector1~0_combout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector4~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector4~1 .extended_lut = "off";
defparam \Selector4~1 .lut_mask = 64'h0F0F0F0F4F6F0F2F;
defparam \Selector4~1 .shared_arith = "off";
// synopsys translate_on

assign DETETA = \DETETA~output_o ;

endmodule
