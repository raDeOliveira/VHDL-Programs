-- Mealy // Covid

library ieee;
use ieee.std_logic_1164.all; 

entity mealyCovid is
port(
    clk, reset : in std_logic;
    level : in std_logic;
    Mealy_tick, Moore_tick: out std_logic 
);
end mealyCovid;

architecture arch of mealyCovid is 
    type stateMealy_type is (zero, one); -- 2 states are required for Mealy
    signal stateMealy_reg, stateMealy_next : stateMealy_type;
    
begin   
    process(clk, reset)
    begin
        if (reset = '1') then -- go to state zero if reset
            stateMealy_reg <= zero;
        elsif (clk'event and clk = '1') then -- otherwise update the states
            stateMealy_reg <= stateMealy_next;
        else
            null;
        end if; 
    end process;
	 
    process(stateMealy_reg, level)
    begin 
        stateMealy_next <= stateMealy_reg;
        
        Mealy_tick <= '0';
        case stateMealy_reg is 
            when zero =>
                if level = '1' then
                    stateMealy_next <= one;
                    Mealy_tick <= '1';
                end if; 
            when one =>  
                if level = '0' then
                    stateMealy_next <= zero;
                end if;
        end case; 
    end process;
    